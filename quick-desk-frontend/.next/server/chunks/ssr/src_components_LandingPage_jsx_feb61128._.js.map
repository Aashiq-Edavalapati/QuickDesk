{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/KvlnA/OneDrive/Important/OR/Enhanced%20Dope/QuickDesk/quick-desk-frontend/src/components/LandingPage.jsx"],"sourcesContent":["// components/LandingPage.jsx\r\n'use client';\r\nimport React, { useState, useMemo, useEffect, useRef } from 'react';\r\nimport {\r\n  Bell,\r\n  Search,\r\n  Plus,\r\n  MessageCircle,\r\n  ThumbsUp,\r\n  Eye,\r\n  User,\r\n  Tag,\r\n  LayoutGrid,\r\n  Users,\r\n  Settings,\r\n  LogOut,\r\n  ChevronLeft,\r\n  ChevronRight,\r\n  BarChart2,\r\n  Menu,\r\n  X,\r\n  FlaskConical,\r\n  ArrowUpDown,\r\n  ChevronDown\r\n} from 'lucide-react';\r\n\r\nconst LandingPage = ({ user, userRole = 'Admin', onNavigate, onLogout }) => {\r\n  const [activeFilter, setActiveFilter] = useState('All');\r\n  const [sortBy, setSortBy] = useState('Default');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\r\n  const [isFilterOpen, setIsFilterOpen] = useState(false);\r\n  const [isSortOpen, setIsSortOpen] = useState(false);\r\n\r\n  const filterRef = useRef(null);\r\n  const sortRef = useRef(null);\r\n  \r\n  const questionsPerPage = 5;\r\n\r\n  // Mock questions data with new statuses\r\n  const allQuestions = [\r\n    { id: 1, title: \"Is it a good practice to use AI for hackathons?\", author: \"Mitchell Admin\", authorRole: \"Admin\", category: \"AI\", timeAgo: \"2 hours ago\", status: \"Open\", votes: 15, replies: 21, views: 156 },\r\n    { id: 2, title: \"Best practices for database indexing in large-scale applications?\", author: \"Sarah Developer\", authorRole: \"Support Agent\", category: \"Development\", timeAgo: \"5 hours ago\", status: \"In Progress\", votes: 45, replies: 12, views: 320 },\r\n    { id: 3, title: \"How to implement secure authentication with Next.js and JWT?\", author: \"John Smith\", authorRole: \"End User\", category: \"Technical\", timeAgo: \"1 day ago\", status: \"Resolved\", votes: 120, replies: 35, views: 1200 },\r\n    { id: 4, title: \"What are the key differences between REST and GraphQL?\", author: \"Jane Doe\", authorRole: \"End User\", category: \"Development\", timeAgo: \"2 days ago\", status: \"Open\", votes: 78, replies: 18, views: 850 },\r\n    { id: 5, title: \"Effective state management strategies in complex React apps\", author: \"Emily White\", authorRole: \"Support Agent\", category: \"Technical\", timeAgo: \"3 days ago\", status: \"In Progress\", votes: 95, replies: 25, views: 1500 },\r\n    { id: 6, title: \"Getting started with Docker and containerization\", author: \"Michael Brown\", authorRole: \"End User\", category: \"Development\", timeAgo: \"4 days ago\", status: \"Closed\", votes: 60, replies: 15, views: 950 },\r\n    { id: 7, title: \"How to optimize web performance and Core Web Vitals?\", author: \"Chris Green\", authorRole: \"Admin\", category: \"Technical\", timeAgo: \"5 days ago\", status: \"Resolved\", votes: 110, replies: 30, views: 2200 }\r\n  ];\r\n\r\n  // Combined filtering and sorting logic using useMemo for efficiency\r\n  const processedQuestions = useMemo(() => {\r\n    let filtered = allQuestions;\r\n    if (activeFilter !== 'All') {\r\n      filtered = allQuestions.filter(q => q.status === activeFilter);\r\n    }\r\n\r\n    let sorted = [...filtered];\r\n    if (sortBy === 'Most Upvotes') {\r\n      sorted.sort((a, b) => b.votes - a.votes);\r\n    } else if (sortBy === 'Most Comments') {\r\n      sorted.sort((a, b) => b.replies - a.replies);\r\n    }\r\n    // 'Default' case doesn't require sorting as it's the original order\r\n\r\n    return sorted;\r\n  }, [activeFilter, sortBy]);\r\n\r\n\r\n  // Pagination logic\r\n  const indexOfLastQuestion = currentPage * questionsPerPage;\r\n  const indexOfFirstQuestion = indexOfLastQuestion - questionsPerPage;\r\n  const currentQuestions = processedQuestions.slice(indexOfFirstQuestion, indexOfLastQuestion);\r\n  const totalPages = Math.ceil(processedQuestions.length / questionsPerPage);\r\n\r\n  const handlePageChange = (pageNumber) => {\r\n    if (pageNumber < 1 || pageNumber > totalPages) return;\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  const handleQuestionClick = (questionId) => {\r\n    onNavigate('question', questionId);\r\n  };\r\n\r\n  // Close dropdowns when clicking outside\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (filterRef.current && !filterRef.current.contains(event.target)) {\r\n        setIsFilterOpen(false);\r\n      }\r\n      if (sortRef.current && !sortRef.current.contains(event.target)) {\r\n        setIsSortOpen(false);\r\n      }\r\n    };\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n  }, []);\r\n\r\n\r\n  const Sidebar = () => (\r\n    <>\r\n      <div className={`fixed inset-0 bg-black bg-opacity-50 z-30 lg:hidden ${isSidebarOpen ? 'block' : 'hidden'}`} onClick={() => setIsSidebarOpen(false)}></div>\r\n      <aside className={`fixed top-0 left-0 h-full w-64 bg-gray-800 border-r border-gray-700/50 flex flex-col z-40 transform transition-transform duration-300 ease-in-out lg:relative lg:translate-x-0 ${isSidebarOpen ? 'translate-x-0' : '-translate-x-full'}`}>\r\n        <div className=\"p-6 flex items-center justify-between\">\r\n            <div className=\"flex items-center gap-3\">\r\n                <div className=\"w-10 h-10 bg-green-600 rounded-full flex items-center justify-center\">\r\n                    <span className=\"text-white font-bold text-xl\">Q</span>\r\n                </div>\r\n                <h1 className=\"text-xl font-bold text-white\">Q&A Platform</h1>\r\n            </div>\r\n            <button onClick={() => setIsSidebarOpen(false)} className=\"p-1 text-gray-400 hover:text-white lg:hidden\"><X size={24} /></button>\r\n        </div>\r\n        <nav className=\"flex-1 px-4 py-2\">\r\n            <a href=\"#\" onClick={() => onNavigate('landing')} className=\"flex items-center gap-3 px-4 py-3 bg-green-600/20 text-green-300 rounded-lg\"><LayoutGrid size={20} /><span>Questions</span></a>\r\n            <a href=\"#\" onClick={() => onNavigate('dashboard')} className=\"flex items-center gap-3 px-4 py-3 text-gray-400 hover:bg-gray-700/50 hover:text-white rounded-lg transition-colors mt-2\"><BarChart2 size={20} /><span>Dashboard</span></a>\r\n            <a href=\"#\" onClick={() => onNavigate('profile')} className=\"flex items-center gap-3 px-4 py-3 text-gray-400 hover:bg-gray-700/50 hover:text-white rounded-lg transition-colors mt-2\"><User size={20} /><span>Profile</span></a>\r\n            {userRole === 'Admin' && (<a href=\"#\" className=\"flex items-center gap-3 px-4 py-3 text-gray-400 hover:bg-gray-700/50 hover:text-white rounded-lg transition-colors mt-2\"><Users size={20} /><span>Users</span></a>)}\r\n            <a href=\"#\" onClick={() => onNavigate('settings')} className=\"flex items-center gap-3 px-4 py-3 text-gray-400 hover:bg-gray-700/50 hover:text-white rounded-lg transition-colors mt-2\"><Settings size={20} /><span>Settings</span></a>\r\n        </nav>\r\n        <div className=\"p-4 border-t border-gray-700/50\"><button onClick={onLogout} className=\"flex items-center gap-3 w-full px-4 py-3 text-red-400 hover:bg-red-500/10 hover:text-red-300 rounded-lg transition-colors\"><LogOut size={20} /><span>Logout</span></button></div>\r\n    </aside>\r\n    </>\r\n  );\r\n\r\n  const getStatusStyles = (status) => {\r\n    switch (status) {\r\n      case 'Open': return 'bg-green-500/10 text-green-400 border border-green-500/30';\r\n      case 'Closed': return 'bg-red-500/10 text-red-400 border border-red-500/30';\r\n      case 'Resolved': return 'bg-blue-500/10 text-blue-400 border border-blue-500/30';\r\n      case 'In Progress': return 'bg-yellow-500/10 text-yellow-400 border border-yellow-500/30';\r\n      default: return 'bg-gray-500/10 text-gray-400 border border-gray-500/30';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-900 flex text-white\">\r\n      <Sidebar />\r\n      <div className=\"flex-1 flex flex-col\">\r\n        <header className=\"flex justify-between items-center p-4 lg:p-8 border-b border-gray-700/50\">\r\n            <div className=\"flex items-center gap-4\">\r\n                <button onClick={() => setIsSidebarOpen(true)} className=\"p-1 text-gray-400 hover:text-white lg:hidden\"><Menu size={24} /></button>\r\n                <div>\r\n                    <h1 className=\"text-xl lg:text-3xl font-bold\">Welcome back, {user}!</h1>\r\n                    <p className=\"text-gray-400 text-sm hidden sm:block\">Here's what's happening today.</p>\r\n                </div>\r\n            </div>\r\n          <div className=\"flex items-center gap-2 md:gap-4\">\r\n            <div className=\"relative hidden md:block\"><Search className=\"absolute left-4 top-1/2 -translate-y-1/2 text-gray-400\" size={20} /><input type=\"text\" placeholder=\"Search...\" className=\"w-full bg-gray-800 border border-gray-700 rounded-lg pl-12 pr-4 py-3 focus:outline-none focus:ring-2 focus:ring-green-500\" /></div>\r\n            <button className=\"p-3 bg-gray-800 border border-gray-700 rounded-lg hover:bg-gray-700 transition-colors\"><Bell size={20} /></button>\r\n            <button onClick={() => onNavigate('ask')} className=\"flex items-center gap-2 px-4 py-3 bg-green-600 hover:bg-green-700 text-white font-semibold rounded-lg transition-colors\"><Plus size={20} className=\"hidden sm:block\" /><span className=\"text-sm sm:text-base\">Ask</span></button>\r\n          </div>\r\n        </header>\r\n\r\n        <main className=\"flex-1 p-4 lg:p-8\">\r\n            <div className=\"bg-gray-800/50 border border-gray-700/50 rounded-lg\">\r\n                <div className=\"p-4 lg:p-6 flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4 border-b border-gray-700/50\">\r\n                    <h2 className=\"text-xl font-semibold\">Questions</h2>\r\n                    <div className=\"flex items-center gap-2\">\r\n                        {/* Filter Dropdown */}\r\n                        <div className=\"relative\" ref={filterRef}>\r\n                            <button onClick={() => setIsFilterOpen(!isFilterOpen)} className=\"flex items-center gap-2 px-4 py-2 bg-gray-800 border border-gray-700 rounded-lg text-sm font-medium hover:bg-gray-700 transition-colors\">\r\n                                <FlaskConical size={16} className=\"text-gray-400\" />\r\n                                <span>Filter: {activeFilter}</span>\r\n                                <ChevronDown size={16} className={`transition-transform ${isFilterOpen ? 'rotate-180' : ''}`} />\r\n                            </button>\r\n                            {isFilterOpen && (\r\n                                <div className=\"absolute top-full right-0 mt-2 w-48 bg-gray-800 border border-gray-700 rounded-lg shadow-lg z-10\">\r\n                                    {['All', 'Open', 'In Progress', 'Resolved', 'Closed'].map(filter => (\r\n                                        <button key={filter} onClick={() => { setActiveFilter(filter); setCurrentPage(1); setIsFilterOpen(false); }} className=\"w-full text-left px-4 py-2 text-sm text-gray-300 hover:bg-gray-700 first:rounded-t-lg last:rounded-b-lg\">\r\n                                            {filter}\r\n                                        </button>\r\n                                    ))}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n\r\n                        {/* Sort Dropdown */}\r\n                         <div className=\"relative\" ref={sortRef}>\r\n                            <button onClick={() => setIsSortOpen(!isSortOpen)} className=\"flex items-center gap-2 px-4 py-2 bg-gray-800 border border-gray-700 rounded-lg text-sm font-medium hover:bg-gray-700 transition-colors\">\r\n                                <ArrowUpDown size={16} className=\"text-gray-400\" />\r\n                                <span>Sort By: {sortBy}</span>\r\n                                <ChevronDown size={16} className={`transition-transform ${isSortOpen ? 'rotate-180' : ''}`} />\r\n                            </button>\r\n                            {isSortOpen && (\r\n                                <div className=\"absolute top-full right-0 mt-2 w-48 bg-gray-800 border border-gray-700 rounded-lg shadow-lg z-10\">\r\n                                    {['Default', 'Most Upvotes', 'Most Comments'].map(sort => (\r\n                                        <button key={sort} onClick={() => { setSortBy(sort); setCurrentPage(1); setIsSortOpen(false); }} className=\"w-full text-left px-4 py-2 text-sm text-gray-300 hover:bg-gray-700 first:rounded-t-lg last:rounded-b-lg\">\r\n                                            {sort}\r\n                                        </button>\r\n                                    ))}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"overflow-x-auto hidden lg:block\">\r\n                    <table className=\"w-full text-left\">\r\n                        <thead className=\"border-b border-gray-700/50\">\r\n                            <tr>\r\n                                <th className=\"p-4 text-sm font-semibold text-gray-400\">Question</th>\r\n                                <th className=\"p-4 text-sm font-semibold text-gray-400\">Author</th>\r\n                                <th className=\"p-4 text-sm font-semibold text-gray-400\">Stats</th>\r\n                                <th className=\"p-4 text-sm font-semibold text-gray-400\">Status</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {currentQuestions.map(q => (\r\n                                <tr key={q.id} onClick={() => handleQuestionClick(q.id)} className=\"border-b border-gray-700/50 hover:bg-gray-800 cursor-pointer transition-colors\">\r\n                                    <td className=\"p-4 align-top\"><p className=\"font-semibold text-white mb-1\">{q.title}</p><div className=\"flex items-center gap-2 text-sm text-gray-400\"><Tag size={14} /><span>{q.category}</span></div></td>\r\n                                    <td className=\"p-4 align-top\"><div className=\"flex items-center gap-2\"><div className={`w-8 h-8 rounded-full flex items-center justify-center text-white flex-shrink-0 ${q.authorRole === 'Admin' ? 'bg-red-500' : q.authorRole === 'Support Agent' ? 'bg-blue-500' : 'bg-gray-600'}`}><User size={16} /></div><div><p className=\"font-medium text-white\">{q.author}</p><p className=\"text-sm text-gray-400\">{q.authorRole}</p></div></div></td>\r\n                                    <td className=\"p-4 align-top\"><div className=\"flex items-center gap-4 text-sm text-gray-300\"><div className=\"flex items-center gap-1\" title=\"Votes\"><ThumbsUp size={14} /> {q.votes}</div><div className=\"flex items-center gap-1\" title=\"Replies\"><MessageCircle size={14} /> {q.replies}</div><div className=\"flex items-center gap-1\" title=\"Views\"><Eye size={14} /> {q.views}</div></div></td>\r\n                                    <td className=\"p-4 align-top\"><span className={`px-3 py-1 rounded-full text-xs font-medium ${getStatusStyles(q.status)}`}>{q.status}</span></td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n                <div className=\"lg:hidden\">\r\n                    {currentQuestions.map(q => (\r\n                        <div key={q.id} onClick={() => handleQuestionClick(q.id)} className=\"p-4 border-b border-gray-700/50 cursor-pointer hover:bg-gray-800\">\r\n                            <div className=\"flex justify-between items-start mb-2\"><div className=\"flex items-center gap-2 text-sm text-gray-400\"><Tag size={14} /><span>{q.category}</span></div><span className={`px-3 py-1 rounded-full text-xs font-medium ${getStatusStyles(q.status)}`}>{q.status}</span></div>\r\n                            <p className=\"font-semibold text-white mb-3\">{q.title}</p>\r\n                            <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center gap-3\">\r\n                                <div className=\"flex items-center gap-2\"><div className={`w-8 h-8 rounded-full flex items-center justify-center text-white flex-shrink-0 ${q.authorRole === 'Admin' ? 'bg-red-500' : q.authorRole === 'Support Agent' ? 'bg-blue-500' : 'bg-gray-600'}`}><User size={16} /></div><div><p className=\"font-medium text-white text-sm\">{q.author}</p><p className=\"text-xs text-gray-400\">{q.authorRole}</p></div></div>\r\n                                <div className=\"flex items-center gap-4 text-sm text-gray-300\"><div className=\"flex items-center gap-1\" title=\"Votes\"><ThumbsUp size={14} /> {q.votes}</div><div className=\"flex items-center gap-1\" title=\"Replies\"><MessageCircle size={14} /> {q.replies}</div><div className=\"flex items-center gap-1\" title=\"Views\"><Eye size={14} /> {q.views}</div></div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                \r\n                <div className=\"p-4 flex flex-col sm:flex-row justify-between items-center gap-4\">\r\n                    <span className=\"text-sm text-gray-400\">Showing {processedQuestions.length > 0 ? indexOfFirstQuestion + 1 : 0} to {Math.min(indexOfLastQuestion, processedQuestions.length)} of {processedQuestions.length} results</span>\r\n                    <div className=\"flex items-center gap-2\">\r\n                        <button onClick={() => handlePageChange(currentPage - 1)} disabled={currentPage === 1} className=\"p-2 rounded-lg bg-gray-800 hover:bg-gray-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"><ChevronLeft size={20} /></button>\r\n                        <span className=\"text-sm font-medium\">Page {currentPage} of {totalPages || 1}</span>\r\n                        <button onClick={() => handlePageChange(currentPage + 1)} disabled={currentPage === totalPages || totalPages === 0} className=\"p-2 rounded-lg bg-gray-800 hover:bg-gray-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"><ChevronRight size={20} /></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LandingPage;\r\n"],"names":[],"mappings":"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","debugId":null}}]
}